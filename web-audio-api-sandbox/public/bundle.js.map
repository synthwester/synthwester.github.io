{
  "version": 3,
  "sources": ["../src/utils/epsilon.ts", "../src/d-envelope/d-envelope.audio.ts", "../src/d-envelope/d-envelope.ui.ts", "../src/d-envelope/d-envelope.module.ts", "../src/mixer/mixer.audio.ts", "../src/mixer/mixer.ui.ts", "../src/mixer/mixer.module.ts", "../src/oscillator/oscillator.audio.ts", "../src/oscillator/oscillator.ui.ts", "../src/oscillator/oscillator.module.ts", "../src/index.ts"],
  "sourcesContent": ["export const epsilon = 1e-5;\r\n", "import { epsilon } from '../utils/epsilon';\r\n\r\nexport class DEnvelopeAudio {\r\n  private audioContext: AudioContext;\r\n  public gainNode: GainNode;\r\n  public decay: number = 0.8;\r\n\r\n  constructor({ decay }: { decay: number }, audioContext: AudioContext) {\r\n    this.audioContext = audioContext;\r\n    this.decay = decay;\r\n    this.gainNode = new GainNode(this.audioContext, { gain: epsilon });\r\n  }\r\n\r\n  public trigger() {\r\n    const now = this.audioContext.currentTime;\r\n\r\n    this.gainNode.gain.cancelScheduledValues(this.decay);\r\n    this.gainNode.gain.setValueAtTime(1, now);\r\n    this.gainNode.gain.exponentialRampToValueAtTime(epsilon, now + this.decay);\r\n  }\r\n\r\n  setDecay(value: number) {\r\n    this.decay = value;\r\n  }\r\n\r\n  get node() {\r\n    return this.gainNode;\r\n  }\r\n}\r\n", "interface DEnvelopeUIParameters {\r\n  name: string;\r\n}\r\n\r\nfunction dEnvelopeUI(params: DEnvelopeUIParameters) {\r\n  return `<fieldset class=\"rounded-lg border border-primary/30 dark:border-primary/50 p-6\">\r\n            <legend class=\"px-2 text-sm font-medium text-neutral-700 dark:text-neutral-300\">D-Envelope</legend>\r\n            <div class=\"space-y-6\">\r\n              <div>\r\n                <label class=\"block text-sm font-medium text-neutral-700 dark:text-neutral-300\" for=\"${params.name}-d-envelope-decay\"\r\n                  >Decay</label\r\n                >\r\n                <div class=\"mt-2 flex items-center gap-4\">\r\n                  <input\r\n                    class=\"h-2 w-full cursor-pointer appearance-none rounded-full bg-primary/20 dark:bg-primary/50 slider-thumb\"\r\n                    id=\"${params.name}-d-envelope-decay\"\r\n                    max=\"5\"\r\n                    min=\"0\"\r\n                    type=\"range\"\r\n                    value=\"1\"\r\n                    step=\"0.1\"\r\n                  />\r\n                  <span id=\"${params.name}-d-envelope-decay-label\" class=\"w-10 text-right text-sm font-medium text-neutral-900 dark:text-white\">500</span>\r\n                </div>\r\n                <div>\r\n              </div>\r\n            </div>\r\n            <button id=\"${params.name}-d-envelope-trigger\" class=\"w-full rounded-lg bg-primary py-3 text-sm font-bold text-white transition-colors hover:bg-primary/90\">\r\n              Trigger\r\n            </button>\r\n          </fieldset>`;\r\n}\r\n\r\nexport function createDEnvelopeUI(\r\n  params: DEnvelopeUIParameters,\r\n): HTMLDivElement {\r\n  const wrapper = document.createElement('div');\r\n  wrapper.innerHTML = dEnvelopeUI(params);\r\n\r\n  return wrapper;\r\n}\r\n", "import { DEnvelopeAudio } from './d-envelope.audio';\r\nimport { createDEnvelopeUI } from './d-envelope.ui';\r\n\r\nexport class DEnvelopeModule {\r\n  private audioContext: AudioContext;\r\n  private name: string;\r\n  public ui: HTMLDivElement;\r\n  public audio: DEnvelopeAudio;\r\n\r\n  constructor({ name }: { name: string }, audioContext: AudioContext) {\r\n    this.name = name;\r\n    this.audioContext = audioContext;\r\n    this.ui = createDEnvelopeUI({ name: this.name });\r\n    this.audio = new DEnvelopeAudio({ decay: 0.8 }, this.audioContext);\r\n\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  private setupEventListeners() {\r\n    const decayInput = this.ui.querySelector(\r\n      `#${this.name}-d-envelope-decay`,\r\n    ) as HTMLInputElement;\r\n    if (!decayInput) {\r\n      throw new Error('decayInput input not found');\r\n    }\r\n    const decayInputLabel = this.ui.querySelector(\r\n      `#${this.name}-d-envelope-decay-label`,\r\n    ) as HTMLInputElement;\r\n    if (!decayInputLabel) {\r\n      throw new Error('decayInput label not found');\r\n    }\r\n    decayInputLabel.textContent = decayInput.value;\r\n\r\n    const triggerButton = this.ui.querySelector(\r\n      `#${this.name}-d-envelope-trigger`,\r\n    ) as HTMLButtonElement;\r\n    if (!triggerButton) {\r\n      throw new Error('Trigger button not found');\r\n    }\r\n\r\n    this.audio.setDecay(Number(decayInput.value));\r\n\r\n    decayInput.addEventListener('input', () => {\r\n      this.audio.setDecay(Number(decayInput.value));\r\n      decayInputLabel.textContent = decayInput.value;\r\n    });\r\n\r\n    triggerButton.addEventListener('click', () => {\r\n      console.log('Envelope triggered');\r\n      this.audio.trigger();\r\n    });\r\n  }\r\n}\r\n", "export class MixerAudio {\r\n  private audioContext: AudioContext;\r\n  private channel1Node: GainNode;\r\n  private channel2Node: GainNode;\r\n  private channel3Node: GainNode;\r\n  private sumNode: GainNode;\r\n  public channel1Level: number = 1;\r\n  public channel2Level: number = 1;\r\n  public channel3Level: number = 1;\r\n\r\n  constructor(\r\n    {\r\n      channel1Level = 1,\r\n      channel2Level = 1,\r\n      channel3Level = 1,\r\n    }: {\r\n      channel1Level?: number;\r\n      channel2Level?: number;\r\n      channel3Level?: number;\r\n    },\r\n    audioContext: AudioContext,\r\n  ) {\r\n    this.audioContext = audioContext;\r\n    this.channel1Node = new GainNode(this.audioContext, {\r\n      gain: channel1Level,\r\n    });\r\n    this.channel2Node = new GainNode(this.audioContext, {\r\n      gain: channel2Level,\r\n    });\r\n    this.channel3Node = new GainNode(this.audioContext, {\r\n      gain: channel3Level,\r\n    });\r\n    this.sumNode = new GainNode(this.audioContext, {\r\n      gain: 0.333333,\r\n    });\r\n\r\n    this.channel1Node.connect(this.sumNode);\r\n    this.channel2Node.connect(this.sumNode);\r\n    this.channel3Node.connect(this.sumNode);\r\n  }\r\n\r\n  setChannel1Level(level: number) {\r\n    this.channel1Node.gain.setValueAtTime(level, this.audioContext.currentTime);\r\n    this.channel1Level = level;\r\n  }\r\n\r\n  setChannel2Level(level: number) {\r\n    this.channel2Node.gain.setValueAtTime(level, this.audioContext.currentTime);\r\n    this.channel2Level = level;\r\n  }\r\n\r\n  setChannel3Level(level: number) {\r\n    this.channel3Node.gain.setValueAtTime(level, this.audioContext.currentTime);\r\n    this.channel3Level = level;\r\n  }\r\n\r\n  get nodes() {\r\n    return {\r\n      channel1: this.channel1Node,\r\n      channel2: this.channel2Node,\r\n      channel3: this.channel3Node,\r\n      sum: this.sumNode,\r\n    };\r\n  }\r\n}\r\n", "interface MixerUIParameters {\r\n  name: string;\r\n}\r\n\r\nfunction mixerUI(params: MixerUIParameters) {\r\n  return `<fieldset class=\"rounded-lg border border-primary/30 dark:border-primary/50 p-6\">\r\n            <legend class=\"px-2 text-sm font-medium text-neutral-700 dark:text-neutral-300\">Mixer</legend>\r\n            <div class=\"space-y-6\">\r\n              <div>\r\n                <label class=\"block text-sm font-medium text-neutral-700 dark:text-neutral-300\" for=\"${params.name}-channel-1-level\"\r\n                  >Channel 1 Level</label\r\n                >\r\n                <div class=\"mt-2 flex items-center gap-4\">\r\n                  <input\r\n                    class=\"h-2 w-full cursor-pointer appearance-none rounded-full bg-primary/20 dark:bg-primary/50 slider-thumb\"\r\n                    id=\"${params.name}-channel-1-level\"\r\n                    max=\"1\"\r\n                    min=\"0\"\r\n                    type=\"range\"\r\n                    value=\"1\"\r\n                    step=\"0.01\"\r\n                  />\r\n                  <span id=\"${params.name}-channel-1-level-label\" class=\"w-10 text-right text-sm font-medium text-neutral-900 dark:text-white\">500</span>\r\n                </div>\r\n                <div>\r\n                <label class=\"block text-sm font-medium text-neutral-700 dark:text-neutral-300\" for=\"${params.name}-channel-2-level\"\r\n                  >Channel 2 Level</label\r\n                >\r\n                <div class=\"mt-2 flex items-center gap-4\">\r\n                  <input\r\n                    class=\"h-2 w-full cursor-pointer appearance-none rounded-full bg-primary/20 dark:bg-primary/50 slider-thumb\"\r\n                    id=\"${params.name}-channel-2-level\"\r\n                    max=\"1\"\r\n                    min=\"0\"\r\n                    type=\"range\"\r\n                    value=\"1\"\r\n                    step=\"0.01\"\r\n                  />\r\n                  <span id=\"${params.name}-channel-2-level-label\" class=\"w-10 text-right text-sm font-medium text-neutral-900 dark:text-white\">500</span>\r\n                </div>\r\n                <div>\r\n                <label class=\"block text-sm font-medium text-neutral-700 dark:text-neutral-300\" for=\"${params.name}-channel-3-level\"\r\n                  >Channel 3 Level</label\r\n                >\r\n                <div class=\"mt-2 flex items-center gap-4\">\r\n                  <input\r\n                    class=\"h-2 w-full cursor-pointer appearance-none rounded-full bg-primary/20 dark:bg-primary/50 slider-thumb\"\r\n                    id=\"${params.name}-channel-3-level\"\r\n                    max=\"1\"\r\n                    min=\"0\"\r\n                    type=\"range\"\r\n                    value=\"1\"\r\n                    step=\"0.01\"\r\n                  />\r\n                  <span id=\"${params.name}-channel-3-level-label\" class=\"w-10 text-right text-sm font-medium text-neutral-900 dark:text-white\">500</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </fieldset>`;\r\n}\r\n\r\nexport function createMixerUI(params: MixerUIParameters): HTMLDivElement {\r\n  const wrapper = document.createElement('div');\r\n  wrapper.innerHTML = mixerUI(params);\r\n\r\n  return wrapper;\r\n}\r\n", "import { MixerAudio } from './mixer.audio';\r\nimport { createMixerUI } from './mixer.ui';\r\n\r\nexport class MixerModule {\r\n  private name: string;\r\n  public ui: HTMLDivElement;\r\n  public audio: MixerAudio;\r\n\r\n  constructor({ name }: { name: string }, audioContext: AudioContext) {\r\n    this.name = name;\r\n    this.ui = createMixerUI({ name: this.name });\r\n    this.audio = new MixerAudio(\r\n      {\r\n        channel1Level: 1,\r\n        channel2Level: 1,\r\n        channel3Level: 1,\r\n      },\r\n      audioContext,\r\n    );\r\n\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  private setupEventListeners() {\r\n    const channel1LevelInput = this.ui.querySelector(\r\n      `#${this.name}-channel-1-level`,\r\n    ) as HTMLInputElement;\r\n    if (!channel1LevelInput) {\r\n      throw new Error('channel1LevelInput input not found');\r\n    }\r\n    const channel1LevelInputLabel = this.ui.querySelector(\r\n      `#${this.name}-channel-1-level-label`,\r\n    ) as HTMLInputElement;\r\n    if (!channel1LevelInputLabel) {\r\n      throw new Error('Frequency input label not found');\r\n    }\r\n    channel1LevelInputLabel.textContent = channel1LevelInput.value;\r\n\r\n    const channel2LevelInput = this.ui.querySelector(\r\n      `#${this.name}-channel-2-level`,\r\n    ) as HTMLInputElement;\r\n    if (!channel2LevelInput) {\r\n      throw new Error('channel2LevelInput input not found');\r\n    }\r\n    const channel2LevelInputLabel = this.ui.querySelector(\r\n      `#${this.name}-channel-2-level-label`,\r\n    ) as HTMLInputElement;\r\n    if (!channel2LevelInputLabel) {\r\n      throw new Error('Frequency input label not found');\r\n    }\r\n    channel2LevelInputLabel.textContent = channel2LevelInput.value;\r\n\r\n    const channel3LevelInput = this.ui.querySelector(\r\n      `#${this.name}-channel-3-level`,\r\n    ) as HTMLInputElement;\r\n    if (!channel3LevelInput) {\r\n      throw new Error('channel3LevelInput input not found');\r\n    }\r\n    const channel3LevelInputLabel = this.ui.querySelector(\r\n      `#${this.name}-channel-3-level-label`,\r\n    ) as HTMLInputElement;\r\n    if (!channel3LevelInputLabel) {\r\n      throw new Error('Frequency input label not found');\r\n    }\r\n    channel3LevelInputLabel.textContent = channel3LevelInput.value;\r\n\r\n    this.audio.setChannel1Level(Number(channel1LevelInput.value));\r\n    this.audio.setChannel2Level(Number(channel2LevelInput.value));\r\n    this.audio.setChannel3Level(Number(channel3LevelInput.value));\r\n\r\n    channel1LevelInput.addEventListener('input', () => {\r\n      this.audio.setChannel1Level(Number(channel1LevelInput.value));\r\n      // console.log(this.audio.channel1Level);\r\n      channel1LevelInputLabel.textContent = channel1LevelInput.value;\r\n    });\r\n\r\n    channel2LevelInput.addEventListener('input', () => {\r\n      this.audio.setChannel2Level(Number(channel2LevelInput.value));\r\n      channel2LevelInputLabel.textContent = channel2LevelInput.value;\r\n    });\r\n\r\n    channel3LevelInput.addEventListener('input', () => {\r\n      this.audio.setChannel3Level(Number(channel3LevelInput.value));\r\n      channel3LevelInputLabel.textContent = channel3LevelInput.value;\r\n    });\r\n  }\r\n}\r\n", "export class OscillatorAudio {\r\n  private audioContext: AudioContext;\r\n  private oscillatorNode: OscillatorNode;\r\n\r\n  constructor({\r\n    audioContext,\r\n    frequency,\r\n    type,\r\n  }: {\r\n    audioContext: AudioContext;\r\n    frequency: number;\r\n    type: OscillatorType;\r\n  }) {\r\n    this.audioContext = audioContext;\r\n    this.oscillatorNode = new OscillatorNode(this.audioContext, {\r\n      frequency,\r\n      type,\r\n    });\r\n  }\r\n\r\n  start() {\r\n    this.oscillatorNode.start();\r\n  }\r\n\r\n  stop() {\r\n    this.oscillatorNode.stop();\r\n  }\r\n\r\n  setFrequency(frequency: number) {\r\n    this.oscillatorNode.frequency.setValueAtTime(\r\n      frequency,\r\n      this.audioContext.currentTime,\r\n    );\r\n  }\r\n\r\n  setType(type: OscillatorType) {\r\n    this.oscillatorNode.type = type;\r\n  }\r\n\r\n  get node() {\r\n    return this.oscillatorNode;\r\n  }\r\n}\r\n", "interface OscillatorUIParameters {\r\n  name: string;\r\n}\r\n\r\nfunction oscillatorUI(params: OscillatorUIParameters) {\r\n  return `<fieldset class=\"rounded-lg border border-primary/30 dark:border-primary/50 p-6\">\r\n            <legend class=\"px-2 text-sm font-medium text-neutral-700 dark:text-neutral-300\">Oscillator</legend>\r\n            <div class=\"space-y-6\">\r\n              <div>\r\n                <label class=\"block text-sm font-medium text-neutral-700 dark:text-neutral-300\" for=\"${params.name}-frequency\"\r\n                  >Frequency (kHz)</label\r\n                >\r\n                <div class=\"mt-2 flex items-center gap-4\">\r\n                  <input\r\n                    class=\"h-2 w-full cursor-pointer appearance-none rounded-full bg-primary/20 dark:bg-primary/50 slider-thumb\"\r\n                    id=\"${params.name}-frequency\"\r\n                    max=\"4000\"\r\n                    min=\"1\"\r\n                    type=\"range\"\r\n                    value=\"500\"\r\n                  />\r\n                  <span id=\"${params.name}-frequency-label\" class=\"w-10 text-right text-sm font-medium text-neutral-900 dark:text-white\">500</span>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <span class=\"block text-sm font-medium text-neutral-700 dark:text-neutral-300\">Type</span>\r\n                <div id=\"${params.name}-type\" class=\"mt-2 grid grid-cols-3 gap-2\">\r\n                  <label\r\n                    class=\"flex cursor-pointer items-center justify-center rounded border border-primary/30 bg-background-light px-4 py-2 text-center text-sm font-medium text-neutral-700 has-[:checked]:border-primary has-[:checked]:bg-primary has-[:checked]:text-white dark:border-primary/50 dark:bg-primary/30 dark:text-neutral-200 dark:has-[:checked]:border-primary dark:has-[:checked]:bg-primary dark:has-[:checked]:text-white\"\r\n                  >\r\n                    <input checked=\"\" class=\"sr-only\" name=\"${params.name}-type\" type=\"radio\" value=\"sine\" />\r\n                    <span>Sine</span>\r\n                  </label>\r\n                  <label\r\n                    class=\"flex cursor-pointer items-center justify-center rounded border border-primary/30 bg-background-light px-4 py-2 text-center text-sm font-medium text-neutral-700 has-[:checked]:border-primary has-[:checked]:bg-primary has-[:checked]:text-white dark:border-primary/50 dark:bg-primary/30 dark:text-neutral-200 dark:has-[:checked]:border-primary dark:has-[:checked]:bg-primary dark:has-[:checked]:text-white\"\r\n                  >\r\n                    <input class=\"sr-only\" name=\"${params.name}-type\" type=\"radio\" value=\"sawtooth\" />\r\n                    <span>Saw</span>\r\n                  </label>\r\n                  <label\r\n                    class=\"flex cursor-pointer items-center justify-center rounded border border-primary/30 bg-background-light px-4 py-2 text-center text-sm font-medium text-neutral-700 has-[:checked]:border-primary has-[:checked]:bg-primary has-[:checked]:text-white dark:border-primary/50 dark:bg-primary/30 dark:text-neutral-200 dark:has-[:checked]:border-primary dark:has-[:checked]:bg-primary dark:has-[:checked]:text-white\"\r\n                  >\r\n                    <input class=\"sr-only\" name=\"${params.name}-type\" type=\"radio\" value=\"square\" />\r\n                    <span>Square</span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </fieldset>`;\r\n}\r\n\r\nexport function createOscillatorUI(\r\n  params: OscillatorUIParameters,\r\n): HTMLDivElement {\r\n  const wrapper = document.createElement('div');\r\n  wrapper.innerHTML = oscillatorUI(params);\r\n\r\n  return wrapper;\r\n}\r\n", "import { OscillatorAudio } from './oscillator.audio';\r\nimport { createOscillatorUI } from './oscillator.ui';\r\n\r\nexport class OscillatorModule {\r\n  private audioContext: AudioContext;\r\n  private name: string;\r\n  public ui: HTMLDivElement;\r\n  public audio: OscillatorAudio;\r\n\r\n  constructor(\r\n    { name, autostart = false }: { name: string; autostart: boolean },\r\n    audioContext: AudioContext,\r\n  ) {\r\n    this.name = name;\r\n    this.audioContext = audioContext;\r\n    this.ui = createOscillatorUI({ name: this.name });\r\n    this.audio = new OscillatorAudio({\r\n      audioContext: this.audioContext,\r\n      frequency: 500,\r\n      type: 'sine',\r\n    });\r\n\r\n    if (autostart) {\r\n      this.audio.start();\r\n    }\r\n\r\n    this.setupEventListeners();\r\n  }\r\n\r\n  private setupEventListeners() {\r\n    const frequencyInput = this.ui.querySelector(\r\n      `#${this.name}-frequency`,\r\n    ) as HTMLInputElement;\r\n    if (!frequencyInput) {\r\n      throw new Error('Frequency input not found');\r\n    }\r\n    const frequencyInputLabel = this.ui.querySelector(\r\n      `#${this.name}-frequency-label`,\r\n    ) as HTMLInputElement;\r\n    if (!frequencyInputLabel) {\r\n      console.log(`${this.name}-frequency-label`);\r\n      throw new Error('Frequency input label not found');\r\n    }\r\n    frequencyInputLabel.textContent = frequencyInput.value;\r\n\r\n    const typeInput = this.ui.querySelector(\r\n      `#${this.name}-type`,\r\n    ) as HTMLDivElement;\r\n    if (!typeInput) {\r\n      throw new Error('Type input not found');\r\n    }\r\n\r\n    frequencyInput.addEventListener('input', () => {\r\n      this.audio.setFrequency(Number(frequencyInput.value));\r\n      frequencyInputLabel.textContent = frequencyInput.value;\r\n    });\r\n\r\n    typeInput.addEventListener('change', (event) => {\r\n      this.audio.setType(\r\n        (event.target as HTMLInputElement).value as OscillatorType,\r\n      );\r\n    });\r\n  }\r\n}\r\n", "import { DEnvelopeModule } from './d-envelope/d-envelope.module';\r\nimport { MixerModule } from './mixer/mixer.module';\r\nimport { OscillatorModule } from './oscillator/oscillator.module';\r\nasync function main() {\r\n  const audioContext = new AudioContext();\r\n\r\n  const contentContext = document.getElementById('content');\r\n  if (!contentContext) {\r\n    throw new Error('Content element not found');\r\n  }\r\n\r\n  // TODO: Refactor - move to separate function\r\n  // Create and append button to start/suspend audio context\r\n  const toggleAudioButton = document.createElement('div');\r\n  toggleAudioButton.innerHTML = `<button class=\"w-full rounded-lg bg-primary py-3 text-sm font-bold text-white transition-colors hover:bg-primary/90\">Toggle Audio</button>`;\r\n  contentContext.appendChild(toggleAudioButton);\r\n\r\n  const triggerEnvelopesGlobal = document.createElement('div');\r\n  triggerEnvelopesGlobal.innerHTML = `<button class=\"w-full rounded-lg bg-primary py-3 text-sm font-bold text-white transition-colors hover:bg-primary/90\">Trigger Envelopes (Global)</button>`;\r\n  contentContext.appendChild(triggerEnvelopesGlobal);\r\n\r\n  const osc1 = new OscillatorModule(\r\n    { name: 'osc1', autostart: true },\r\n    audioContext,\r\n  );\r\n  contentContext.appendChild(osc1.ui);\r\n\r\n  const dEnvelope1 = new DEnvelopeModule({ name: 'denv1' }, audioContext);\r\n  contentContext.appendChild(dEnvelope1.ui);\r\n\r\n  const osc2 = new OscillatorModule(\r\n    { name: 'osc2', autostart: true },\r\n    audioContext,\r\n  );\r\n  contentContext.appendChild(osc2.ui);\r\n\r\n  const dEnvelope2 = new DEnvelopeModule({ name: 'denv2' }, audioContext);\r\n  contentContext.appendChild(dEnvelope2.ui);\r\n\r\n  const osc3 = new OscillatorModule(\r\n    { name: 'osc3', autostart: true },\r\n    audioContext,\r\n  );\r\n  contentContext.appendChild(osc3.ui);\r\n\r\n  const dEnvelope3 = new DEnvelopeModule({ name: 'denv3' }, audioContext);\r\n  contentContext.appendChild(dEnvelope3.ui);\r\n\r\n  const mixer1 = new MixerModule({ name: 'mixer1' }, audioContext);\r\n  contentContext.appendChild(mixer1.ui);\r\n  mixer1.audio.nodes.sum.connect(audioContext.destination);\r\n\r\n  // dEnvelope1.audio.node\r\n  //   .connect(new GainNode(audioContext, { gain: 1000 }))\r\n  //   .connect(osc1.audio.node.frequency);\r\n\r\n  osc1.audio.node\r\n    .connect(dEnvelope1.audio.node)\r\n    .connect(new GainNode(audioContext, { gain: 1000 }))\r\n    .connect(osc2.audio.node.frequency);\r\n\r\n  osc2.audio.node\r\n    .connect(dEnvelope2.audio.node)\r\n    .connect(new GainNode(audioContext, { gain: 1000 }))\r\n    .connect(osc3.audio.node.frequency);\r\n\r\n  osc1.audio.node\r\n    .connect(dEnvelope1.audio.node)\r\n    .connect(mixer1.audio.nodes.channel1);\r\n\r\n  osc2.audio.node\r\n    .connect(dEnvelope2.audio.node)\r\n    .connect(mixer1.audio.nodes.channel2);\r\n\r\n  osc3.audio.node\r\n    .connect(dEnvelope3.audio.node)\r\n    .connect(mixer1.audio.nodes.channel3);\r\n\r\n  // osc1.audio.node\r\n  //   .connect(dEnvelope1.audio.node)\r\n  //   .connect(mixer1.audio.nodes.channel1);\r\n\r\n  // const osc1 = new OscillatorModule(\r\n  //   { name: 'osc1', autostart: true },\r\n  //   audioContext,\r\n  // );\r\n  // contentContext.appendChild(osc1.ui);\r\n\r\n  // const osc2 = new OscillatorModule(\r\n  //   { name: 'osc2', autostart: true },\r\n  //   audioContext,\r\n  // );\r\n  // contentContext.appendChild(osc2.ui);\r\n\r\n  // const osc3 = new OscillatorModule(\r\n  //   { name: 'osc3', autostart: true },\r\n  //   audioContext,\r\n  // );\r\n  // contentContext.appendChild(osc3.ui);\r\n\r\n  // const dEnvelope1 = new DEnvelopeModule(\r\n  //   { name: 'd-envelope-1' },\r\n  //   audioContext,\r\n  // );\r\n  // contentContext.appendChild(dEnvelope1.ui);\r\n\r\n  // const mixer1 = new MixerModule({ name: 'mixer1' }, audioContext);\r\n  // contentContext.appendChild(mixer1.ui);\r\n  // mixer1.audio.nodes.sum.connect(audioContext.destination);\r\n\r\n  // osc1.audio.node.connect(mixer1.audio.nodes.channel1);\r\n  // osc2.audio.node.connect(mixer1.audio.nodes.channel2);\r\n  // osc3.audio.node.connect(mixer1.audio.nodes.channel3);\r\n\r\n  // Frequency Modulation example\r\n  // osc1.audio.node\r\n  //   .connect(\r\n  //     new GainNode(audioContext, {\r\n  //       gain: 1000,\r\n  //     }),\r\n  //   )\r\n  //   .connect(osc2.audio.node.frequency);\r\n\r\n  toggleAudioButton.addEventListener('click', async () => {\r\n    console.log('Button clicked');\r\n    if (audioContext.state === 'suspended') {\r\n      await audioContext.resume();\r\n    } else if (audioContext.state === 'running') {\r\n      await audioContext.suspend();\r\n    }\r\n  });\r\n\r\n  triggerEnvelopesGlobal.addEventListener('click', () => {\r\n    dEnvelope1.audio.trigger();\r\n    dEnvelope2.audio.trigger();\r\n    dEnvelope3.audio.trigger();\r\n  });\r\n}\r\n\r\nwindow.addEventListener('load', () => {\r\n  console.log('Window loaded');\r\n  main().catch((error) => {\r\n    console.error('Error in main:', error);\r\n  });\r\n});\r\n"],
  "mappings": "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",
  "names": []
}
